// Mocks generated by Mockito 5.4.6 from annotations
// in trailrun_app/test/data/services/local_first_data_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;

import 'package:drift/drift.dart' as _i2;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i15;
import 'package:trailrun_app/data/database/daos/activity_dao.dart' as _i4;
import 'package:trailrun_app/data/database/daos/photo_dao.dart' as _i6;
import 'package:trailrun_app/data/database/daos/split_dao.dart' as _i7;
import 'package:trailrun_app/data/database/daos/sync_queue_dao.dart' as _i8;
import 'package:trailrun_app/data/database/daos/track_point_dao.dart' as _i5;
import 'package:trailrun_app/data/database/database.dart' as _i3;
import 'package:trailrun_app/data/services/sync_service.dart' as _i17;
import 'package:trailrun_app/domain/enums/sync_state.dart' as _i16;
import 'package:trailrun_app/domain/models/activity.dart' as _i11;
import 'package:trailrun_app/domain/models/photo.dart' as _i12;
import 'package:trailrun_app/domain/models/split.dart' as _i14;
import 'package:trailrun_app/domain/models/track_point.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMigrationStrategy_0 extends _i1.SmartFake
    implements _i2.MigrationStrategy {
  _FakeMigrationStrategy_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$ActivitiesTableTable_1 extends _i1.SmartFake
    implements _i3.$ActivitiesTableTable {
  _Fake$ActivitiesTableTable_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$TrackPointsTableTable_2 extends _i1.SmartFake
    implements _i3.$TrackPointsTableTable {
  _Fake$TrackPointsTableTable_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$PhotosTableTable_3 extends _i1.SmartFake
    implements _i3.$PhotosTableTable {
  _Fake$PhotosTableTable_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$SplitsTableTable_4 extends _i1.SmartFake
    implements _i3.$SplitsTableTable {
  _Fake$SplitsTableTable_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$SyncQueueTableTable_5 extends _i1.SmartFake
    implements _i3.$SyncQueueTableTable {
  _Fake$SyncQueueTableTable_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActivityDao_6 extends _i1.SmartFake implements _i4.ActivityDao {
  _FakeActivityDao_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTrackPointDao_7 extends _i1.SmartFake implements _i5.TrackPointDao {
  _FakeTrackPointDao_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePhotoDao_8 extends _i1.SmartFake implements _i6.PhotoDao {
  _FakePhotoDao_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSplitDao_9 extends _i1.SmartFake implements _i7.SplitDao {
  _FakeSplitDao_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSyncQueueDao_10 extends _i1.SmartFake implements _i8.SyncQueueDao {
  _FakeSyncQueueDao_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$TrailRunDatabaseManager_11 extends _i1.SmartFake
    implements _i3.$TrailRunDatabaseManager {
  _Fake$TrailRunDatabaseManager_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneratedDatabase_12 extends _i1.SmartFake
    implements _i2.GeneratedDatabase {
  _FakeGeneratedDatabase_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDatabaseOptions_13 extends _i1.SmartFake
    implements _i2.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryUpdateRules_14 extends _i1.SmartFake
    implements _i2.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnection_15 extends _i1.SmartFake
    implements _i2.DatabaseConnection {
  _FakeDatabaseConnection_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryExecutor_16 extends _i1.SmartFake implements _i2.QueryExecutor {
  _FakeQueryExecutor_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryStore_17 extends _i1.SmartFake
    implements _i9.StreamQueryStore {
  _FakeStreamQueryStore_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnectionUser_18 extends _i1.SmartFake
    implements _i2.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrator_19 extends _i1.SmartFake implements _i2.Migrator {
  _FakeMigrator_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_20<T1> extends _i1.SmartFake implements _i10.Future<T1> {
  _FakeFuture_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInsertStatement_21<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.InsertStatement<T1, D1> {
  _FakeInsertStatement_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatement_22<T extends _i2.Table, D> extends _i1.SmartFake
    implements _i2.UpdateStatement<T, D> {
  _FakeUpdateStatement_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSimpleSelectStatement_23<T1 extends _i2.HasResultSet, D>
    extends _i1.SmartFake implements _i2.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinedSelectStatement_24<FirstT extends _i2.HasResultSet, FirstD>
    extends _i1.SmartFake implements _i2.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseSelectStatement_25<Row> extends _i1.SmartFake
    implements _i2.BaseSelectStatement<Row> {
  _FakeBaseSelectStatement_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteStatement_26<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectable_27<T> extends _i1.SmartFake implements _i2.Selectable<T> {
  _FakeSelectable_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerationContext_28 extends _i1.SmartFake
    implements _i2.GenerationContext {
  _FakeGenerationContext_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTrailRunDatabase_29 extends _i1.SmartFake
    implements _i3.TrailRunDatabase {
  _FakeTrailRunDatabase_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActivityEntity_30 extends _i1.SmartFake
    implements _i3.ActivityEntity {
  _FakeActivityEntity_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActivity_31 extends _i1.SmartFake implements _i11.Activity {
  _FakeActivity_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePhotoEntity_32 extends _i1.SmartFake implements _i3.PhotoEntity {
  _FakePhotoEntity_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePhoto_33 extends _i1.SmartFake implements _i12.Photo {
  _FakePhoto_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTrackPointEntity_34 extends _i1.SmartFake
    implements _i3.TrackPointEntity {
  _FakeTrackPointEntity_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTrackPoint_35 extends _i1.SmartFake implements _i13.TrackPoint {
  _FakeTrackPoint_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSplitEntity_36 extends _i1.SmartFake implements _i3.SplitEntity {
  _FakeSplitEntity_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSplit_37 extends _i1.SmartFake implements _i14.Split {
  _FakeSplit_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TrailRunDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrailRunDatabase extends _i1.Mock implements _i3.TrailRunDatabase {
  MockTrailRunDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion => (super.noSuchMethod(
        Invocation.getter(#schemaVersion),
        returnValue: 0,
      ) as int);

  @override
  _i2.MigrationStrategy get migration => (super.noSuchMethod(
        Invocation.getter(#migration),
        returnValue: _FakeMigrationStrategy_0(
          this,
          Invocation.getter(#migration),
        ),
      ) as _i2.MigrationStrategy);

  @override
  _i3.$ActivitiesTableTable get activitiesTable => (super.noSuchMethod(
        Invocation.getter(#activitiesTable),
        returnValue: _Fake$ActivitiesTableTable_1(
          this,
          Invocation.getter(#activitiesTable),
        ),
      ) as _i3.$ActivitiesTableTable);

  @override
  _i3.$TrackPointsTableTable get trackPointsTable => (super.noSuchMethod(
        Invocation.getter(#trackPointsTable),
        returnValue: _Fake$TrackPointsTableTable_2(
          this,
          Invocation.getter(#trackPointsTable),
        ),
      ) as _i3.$TrackPointsTableTable);

  @override
  _i3.$PhotosTableTable get photosTable => (super.noSuchMethod(
        Invocation.getter(#photosTable),
        returnValue: _Fake$PhotosTableTable_3(
          this,
          Invocation.getter(#photosTable),
        ),
      ) as _i3.$PhotosTableTable);

  @override
  _i3.$SplitsTableTable get splitsTable => (super.noSuchMethod(
        Invocation.getter(#splitsTable),
        returnValue: _Fake$SplitsTableTable_4(
          this,
          Invocation.getter(#splitsTable),
        ),
      ) as _i3.$SplitsTableTable);

  @override
  _i3.$SyncQueueTableTable get syncQueueTable => (super.noSuchMethod(
        Invocation.getter(#syncQueueTable),
        returnValue: _Fake$SyncQueueTableTable_5(
          this,
          Invocation.getter(#syncQueueTable),
        ),
      ) as _i3.$SyncQueueTableTable);

  @override
  _i4.ActivityDao get activityDao => (super.noSuchMethod(
        Invocation.getter(#activityDao),
        returnValue: _FakeActivityDao_6(
          this,
          Invocation.getter(#activityDao),
        ),
      ) as _i4.ActivityDao);

  @override
  _i5.TrackPointDao get trackPointDao => (super.noSuchMethod(
        Invocation.getter(#trackPointDao),
        returnValue: _FakeTrackPointDao_7(
          this,
          Invocation.getter(#trackPointDao),
        ),
      ) as _i5.TrackPointDao);

  @override
  _i6.PhotoDao get photoDao => (super.noSuchMethod(
        Invocation.getter(#photoDao),
        returnValue: _FakePhotoDao_8(
          this,
          Invocation.getter(#photoDao),
        ),
      ) as _i6.PhotoDao);

  @override
  _i7.SplitDao get splitDao => (super.noSuchMethod(
        Invocation.getter(#splitDao),
        returnValue: _FakeSplitDao_9(
          this,
          Invocation.getter(#splitDao),
        ),
      ) as _i7.SplitDao);

  @override
  _i8.SyncQueueDao get syncQueueDao => (super.noSuchMethod(
        Invocation.getter(#syncQueueDao),
        returnValue: _FakeSyncQueueDao_10(
          this,
          Invocation.getter(#syncQueueDao),
        ),
      ) as _i8.SyncQueueDao);

  @override
  _i3.$TrailRunDatabaseManager get managers => (super.noSuchMethod(
        Invocation.getter(#managers),
        returnValue: _Fake$TrailRunDatabaseManager_11(
          this,
          Invocation.getter(#managers),
        ),
      ) as _i3.$TrailRunDatabaseManager);

  @override
  Iterable<_i2.TableInfo<_i2.Table, Object?>> get allTables =>
      (super.noSuchMethod(
        Invocation.getter(#allTables),
        returnValue: <_i2.TableInfo<_i2.Table, Object?>>[],
      ) as Iterable<_i2.TableInfo<_i2.Table, Object?>>);

  @override
  List<_i2.DatabaseSchemaEntity> get allSchemaEntities => (super.noSuchMethod(
        Invocation.getter(#allSchemaEntities),
        returnValue: <_i2.DatabaseSchemaEntity>[],
      ) as List<_i2.DatabaseSchemaEntity>);

  @override
  _i2.GeneratedDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeGeneratedDatabase_12(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i2.GeneratedDatabase);

  @override
  _i2.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_13(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.DriftDatabaseOptions);

  @override
  _i2.StreamQueryUpdateRules get streamUpdateRules => (super.noSuchMethod(
        Invocation.getter(#streamUpdateRules),
        returnValue: _FakeStreamQueryUpdateRules_14(
          this,
          Invocation.getter(#streamUpdateRules),
        ),
      ) as _i2.StreamQueryUpdateRules);

  @override
  _i2.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_15(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i15.dummyValue<_i2.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i2.SqlTypes);

  @override
  _i2.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_16(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i2.QueryExecutor);

  @override
  _i9.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_17(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i9.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_18(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i2.DatabaseConnectionUser);

  @override
  _i2.Migrator createMigrator() => (super.noSuchMethod(
        Invocation.method(
          #createMigrator,
          [],
        ),
        returnValue: _FakeMigrator_19(
          this,
          Invocation.method(
            #createMigrator,
            [],
          ),
        ),
      ) as _i2.Migrator);

  @override
  _i10.Future<void> beforeOpen(
    _i2.QueryExecutor? executor,
    _i2.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #beforeOpen,
          [
            executor,
            details,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Stream<T> createStream<T extends Object>(
          _i9.QueryStreamFetcher<T>? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i10.Stream<T>.empty(),
      ) as _i10.Stream<T>);

  @override
  T alias<T, D>(
    _i2.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i15.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Stream<Set<_i2.TableUpdate>> tableUpdates(
          [_i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i10.Stream<Set<_i2.TableUpdate>>.empty(),
      ) as _i10.Stream<Set<_i2.TableUpdate>>);

  @override
  _i10.Future<T> doWhenOpened<T>(
          _i10.FutureOr<T> Function(_i2.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_21<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
          _i2.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_22<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_23<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_24<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
          Iterable<_i2.Expression<Object>>? columns) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectExpressions,
          [columns],
        ),
        returnValue: _FakeBaseSelectStatement_25<_i2.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
      ) as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_26<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i2.DeleteStatement<T, D>);

  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
      ) as _i10.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_27<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_27<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i10.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i10.Future<T> exclusively<T>(_i10.Future<T> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #exclusively,
          [action],
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i10.Future<void> batch(
          _i10.FutureOr<void> Function(_i2.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<T> runWithInterceptor<T>(
    _i10.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runWithInterceptor,
          [action],
          {#interceptor: interceptor},
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_28(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_28(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i15.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);
}

/// A class which mocks [ActivityDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivityDao extends _i1.Mock implements _i4.ActivityDao {
  MockActivityDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TrailRunDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeTrailRunDatabase_29(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i3.TrailRunDatabase);

  @override
  _i2.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_15(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i15.dummyValue<_i2.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i2.SqlTypes);

  @override
  _i2.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_13(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.DriftDatabaseOptions);

  @override
  _i2.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_16(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i2.QueryExecutor);

  @override
  _i9.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_17(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i9.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_18(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i2.DatabaseConnectionUser);

  @override
  _i3.$ActivitiesTableTable get activitiesTable => (super.noSuchMethod(
        Invocation.getter(#activitiesTable),
        returnValue: _Fake$ActivitiesTableTable_1(
          this,
          Invocation.getter(#activitiesTable),
        ),
      ) as _i3.$ActivitiesTableTable);

  @override
  _i10.Future<List<_i3.ActivityEntity>> getAllActivities() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllActivities,
          [],
        ),
        returnValue:
            _i10.Future<List<_i3.ActivityEntity>>.value(<_i3.ActivityEntity>[]),
      ) as _i10.Future<List<_i3.ActivityEntity>>);

  @override
  _i10.Future<List<_i3.ActivityEntity>> getActivitiesPaginated({
    required int? limit,
    required int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivitiesPaginated,
          [],
          {
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue:
            _i10.Future<List<_i3.ActivityEntity>>.value(<_i3.ActivityEntity>[]),
      ) as _i10.Future<List<_i3.ActivityEntity>>);

  @override
  _i10.Future<_i3.ActivityEntity?> getActivityById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivityById,
          [id],
        ),
        returnValue: _i10.Future<_i3.ActivityEntity?>.value(),
      ) as _i10.Future<_i3.ActivityEntity?>);

  @override
  _i10.Future<_i3.ActivityEntity?> getActiveActivity() => (super.noSuchMethod(
        Invocation.method(
          #getActiveActivity,
          [],
        ),
        returnValue: _i10.Future<_i3.ActivityEntity?>.value(),
      ) as _i10.Future<_i3.ActivityEntity?>);

  @override
  _i10.Future<List<_i3.ActivityEntity>> getActivitiesBySyncState(
          _i16.SyncState? syncState) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivitiesBySyncState,
          [syncState],
        ),
        returnValue:
            _i10.Future<List<_i3.ActivityEntity>>.value(<_i3.ActivityEntity>[]),
      ) as _i10.Future<List<_i3.ActivityEntity>>);

  @override
  _i10.Future<List<_i3.ActivityEntity>> getActivitiesInDateRange({
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivitiesInDateRange,
          [],
          {
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue:
            _i10.Future<List<_i3.ActivityEntity>>.value(<_i3.ActivityEntity>[]),
      ) as _i10.Future<List<_i3.ActivityEntity>>);

  @override
  _i10.Future<List<_i3.ActivityEntity>> searchActivities(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchActivities,
          [query],
        ),
        returnValue:
            _i10.Future<List<_i3.ActivityEntity>>.value(<_i3.ActivityEntity>[]),
      ) as _i10.Future<List<_i3.ActivityEntity>>);

  @override
  _i10.Future<int> getActivitiesCount() => (super.noSuchMethod(
        Invocation.method(
          #getActivitiesCount,
          [],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> createActivity(_i3.ActivityEntity? activity) =>
      (super.noSuchMethod(
        Invocation.method(
          #createActivity,
          [activity],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<bool> updateActivity(_i3.ActivityEntity? activity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateActivity,
          [activity],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<int> updateActivitySyncState(
    String? id,
    _i16.SyncState? syncState,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateActivitySyncState,
          [
            id,
            syncState,
          ],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> deleteActivity(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteActivity,
          [id],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> deleteAllActivities() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllActivities,
          [],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Stream<_i3.ActivityEntity?> watchActivityById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchActivityById,
          [id],
        ),
        returnValue: _i10.Stream<_i3.ActivityEntity?>.empty(),
      ) as _i10.Stream<_i3.ActivityEntity?>);

  @override
  _i10.Stream<List<_i3.ActivityEntity>> watchAllActivities() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllActivities,
          [],
        ),
        returnValue: _i10.Stream<List<_i3.ActivityEntity>>.empty(),
      ) as _i10.Stream<List<_i3.ActivityEntity>>);

  @override
  _i10.Stream<_i3.ActivityEntity?> watchActiveActivity() => (super.noSuchMethod(
        Invocation.method(
          #watchActiveActivity,
          [],
        ),
        returnValue: _i10.Stream<_i3.ActivityEntity?>.empty(),
      ) as _i10.Stream<_i3.ActivityEntity?>);

  @override
  _i3.ActivityEntity toEntity(_i11.Activity? activity) => (super.noSuchMethod(
        Invocation.method(
          #toEntity,
          [activity],
        ),
        returnValue: _FakeActivityEntity_30(
          this,
          Invocation.method(
            #toEntity,
            [activity],
          ),
        ),
      ) as _i3.ActivityEntity);

  @override
  _i11.Activity fromEntity(_i3.ActivityEntity? entity) => (super.noSuchMethod(
        Invocation.method(
          #fromEntity,
          [entity],
        ),
        returnValue: _FakeActivity_31(
          this,
          Invocation.method(
            #fromEntity,
            [entity],
          ),
        ),
      ) as _i11.Activity);

  @override
  _i10.Stream<T> createStream<T extends Object>(
          _i9.QueryStreamFetcher<T>? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i10.Stream<T>.empty(),
      ) as _i10.Stream<T>);

  @override
  T alias<T, D>(
    _i2.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i15.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Stream<Set<_i2.TableUpdate>> tableUpdates(
          [_i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i10.Stream<Set<_i2.TableUpdate>>.empty(),
      ) as _i10.Stream<Set<_i2.TableUpdate>>);

  @override
  _i10.Future<T> doWhenOpened<T>(
          _i10.FutureOr<T> Function(_i2.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_21<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
          _i2.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_22<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_23<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_24<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
          Iterable<_i2.Expression<Object>>? columns) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectExpressions,
          [columns],
        ),
        returnValue: _FakeBaseSelectStatement_25<_i2.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
      ) as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_26<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i2.DeleteStatement<T, D>);

  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
      ) as _i10.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_27<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_27<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i10.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i10.Future<T> exclusively<T>(_i10.Future<T> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #exclusively,
          [action],
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i10.Future<void> batch(
          _i10.FutureOr<void> Function(_i2.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<T> runWithInterceptor<T>(
    _i10.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runWithInterceptor,
          [action],
          {#interceptor: interceptor},
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_28(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_28(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i15.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [PhotoDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoDao extends _i1.Mock implements _i6.PhotoDao {
  MockPhotoDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TrailRunDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeTrailRunDatabase_29(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i3.TrailRunDatabase);

  @override
  _i2.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_15(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i15.dummyValue<_i2.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i2.SqlTypes);

  @override
  _i2.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_13(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.DriftDatabaseOptions);

  @override
  _i2.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_16(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i2.QueryExecutor);

  @override
  _i9.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_17(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i9.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_18(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i2.DatabaseConnectionUser);

  @override
  _i3.$PhotosTableTable get photosTable => (super.noSuchMethod(
        Invocation.getter(#photosTable),
        returnValue: _Fake$PhotosTableTable_3(
          this,
          Invocation.getter(#photosTable),
        ),
      ) as _i3.$PhotosTableTable);

  @override
  _i10.Future<List<_i3.PhotoEntity>> getPhotosForActivity(String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPhotosForActivity,
          [activityId],
        ),
        returnValue:
            _i10.Future<List<_i3.PhotoEntity>>.value(<_i3.PhotoEntity>[]),
      ) as _i10.Future<List<_i3.PhotoEntity>>);

  @override
  _i10.Future<List<_i3.PhotoEntity>> getPhotosPaginated({
    required String? activityId,
    required int? limit,
    required int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPhotosPaginated,
          [],
          {
            #activityId: activityId,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue:
            _i10.Future<List<_i3.PhotoEntity>>.value(<_i3.PhotoEntity>[]),
      ) as _i10.Future<List<_i3.PhotoEntity>>);

  @override
  _i10.Future<_i3.PhotoEntity?> getPhotoById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getPhotoById,
          [id],
        ),
        returnValue: _i10.Future<_i3.PhotoEntity?>.value(),
      ) as _i10.Future<_i3.PhotoEntity?>);

  @override
  _i10.Future<List<_i3.PhotoEntity>> getGeotaggedPhotos(String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGeotaggedPhotos,
          [activityId],
        ),
        returnValue:
            _i10.Future<List<_i3.PhotoEntity>>.value(<_i3.PhotoEntity>[]),
      ) as _i10.Future<List<_i3.PhotoEntity>>);

  @override
  _i10.Future<List<_i3.PhotoEntity>> getCoverCandidatePhotos({
    required String? activityId,
    double? minCurationScore = 0.7,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoverCandidatePhotos,
          [],
          {
            #activityId: activityId,
            #minCurationScore: minCurationScore,
          },
        ),
        returnValue:
            _i10.Future<List<_i3.PhotoEntity>>.value(<_i3.PhotoEntity>[]),
      ) as _i10.Future<List<_i3.PhotoEntity>>);

  @override
  _i10.Future<List<_i3.PhotoEntity>> getPhotosInTimeRange({
    required String? activityId,
    required DateTime? startTime,
    required DateTime? endTime,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPhotosInTimeRange,
          [],
          {
            #activityId: activityId,
            #startTime: startTime,
            #endTime: endTime,
          },
        ),
        returnValue:
            _i10.Future<List<_i3.PhotoEntity>>.value(<_i3.PhotoEntity>[]),
      ) as _i10.Future<List<_i3.PhotoEntity>>);

  @override
  _i10.Future<int> getPhotosCount(String? activityId) => (super.noSuchMethod(
        Invocation.method(
          #getPhotosCount,
          [activityId],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<List<_i3.PhotoEntity>> searchPhotosByCaption({
    required String? activityId,
    required String? query,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPhotosByCaption,
          [],
          {
            #activityId: activityId,
            #query: query,
          },
        ),
        returnValue:
            _i10.Future<List<_i3.PhotoEntity>>.value(<_i3.PhotoEntity>[]),
      ) as _i10.Future<List<_i3.PhotoEntity>>);

  @override
  _i10.Future<int> createPhoto(_i3.PhotoEntity? photo) => (super.noSuchMethod(
        Invocation.method(
          #createPhoto,
          [photo],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<void> createPhotosBatch(List<_i3.PhotoEntity>? photos) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPhotosBatch,
          [photos],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<bool> updatePhoto(_i3.PhotoEntity? photo) => (super.noSuchMethod(
        Invocation.method(
          #updatePhoto,
          [photo],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<int> updatePhotoCurationScore(
    String? id,
    double? curationScore,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhotoCurationScore,
          [
            id,
            curationScore,
          ],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> updatePhotoCaption(
    String? id,
    String? caption,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhotoCaption,
          [
            id,
            caption,
          ],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> deletePhoto(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deletePhoto,
          [id],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> deletePhotosForActivity(String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePhotosForActivity,
          [activityId],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> deletePhotosOlderThan(DateTime? cutoffDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePhotosOlderThan,
          [cutoffDate],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Stream<List<_i3.PhotoEntity>> watchPhotosForActivity(
          String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchPhotosForActivity,
          [activityId],
        ),
        returnValue: _i10.Stream<List<_i3.PhotoEntity>>.empty(),
      ) as _i10.Stream<List<_i3.PhotoEntity>>);

  @override
  _i10.Stream<_i3.PhotoEntity?> watchPhotoById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchPhotoById,
          [id],
        ),
        returnValue: _i10.Stream<_i3.PhotoEntity?>.empty(),
      ) as _i10.Stream<_i3.PhotoEntity?>);

  @override
  _i3.PhotoEntity toEntity(_i12.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #toEntity,
          [photo],
        ),
        returnValue: _FakePhotoEntity_32(
          this,
          Invocation.method(
            #toEntity,
            [photo],
          ),
        ),
      ) as _i3.PhotoEntity);

  @override
  _i12.Photo fromEntity(_i3.PhotoEntity? entity) => (super.noSuchMethod(
        Invocation.method(
          #fromEntity,
          [entity],
        ),
        returnValue: _FakePhoto_33(
          this,
          Invocation.method(
            #fromEntity,
            [entity],
          ),
        ),
      ) as _i12.Photo);

  @override
  _i10.Stream<T> createStream<T extends Object>(
          _i9.QueryStreamFetcher<T>? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i10.Stream<T>.empty(),
      ) as _i10.Stream<T>);

  @override
  T alias<T, D>(
    _i2.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i15.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Stream<Set<_i2.TableUpdate>> tableUpdates(
          [_i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i10.Stream<Set<_i2.TableUpdate>>.empty(),
      ) as _i10.Stream<Set<_i2.TableUpdate>>);

  @override
  _i10.Future<T> doWhenOpened<T>(
          _i10.FutureOr<T> Function(_i2.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_21<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
          _i2.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_22<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_23<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_24<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
          Iterable<_i2.Expression<Object>>? columns) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectExpressions,
          [columns],
        ),
        returnValue: _FakeBaseSelectStatement_25<_i2.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
      ) as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_26<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i2.DeleteStatement<T, D>);

  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
      ) as _i10.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_27<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_27<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i10.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i10.Future<T> exclusively<T>(_i10.Future<T> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #exclusively,
          [action],
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i10.Future<void> batch(
          _i10.FutureOr<void> Function(_i2.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<T> runWithInterceptor<T>(
    _i10.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runWithInterceptor,
          [action],
          {#interceptor: interceptor},
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_28(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_28(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i15.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [TrackPointDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrackPointDao extends _i1.Mock implements _i5.TrackPointDao {
  MockTrackPointDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TrailRunDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeTrailRunDatabase_29(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i3.TrailRunDatabase);

  @override
  _i2.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_15(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i15.dummyValue<_i2.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i2.SqlTypes);

  @override
  _i2.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_13(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.DriftDatabaseOptions);

  @override
  _i2.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_16(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i2.QueryExecutor);

  @override
  _i9.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_17(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i9.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_18(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i2.DatabaseConnectionUser);

  @override
  _i3.$TrackPointsTableTable get trackPointsTable => (super.noSuchMethod(
        Invocation.getter(#trackPointsTable),
        returnValue: _Fake$TrackPointsTableTable_2(
          this,
          Invocation.getter(#trackPointsTable),
        ),
      ) as _i3.$TrackPointsTableTable);

  @override
  _i10.Future<List<_i3.TrackPointEntity>> getTrackPointsForActivity(
          String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrackPointsForActivity,
          [activityId],
        ),
        returnValue: _i10.Future<List<_i3.TrackPointEntity>>.value(
            <_i3.TrackPointEntity>[]),
      ) as _i10.Future<List<_i3.TrackPointEntity>>);

  @override
  _i10.Future<List<_i3.TrackPointEntity>> getTrackPointsPaginated({
    required String? activityId,
    required int? limit,
    required int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrackPointsPaginated,
          [],
          {
            #activityId: activityId,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i10.Future<List<_i3.TrackPointEntity>>.value(
            <_i3.TrackPointEntity>[]),
      ) as _i10.Future<List<_i3.TrackPointEntity>>);

  @override
  _i10.Future<_i3.TrackPointEntity?> getTrackPointById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrackPointById,
          [id],
        ),
        returnValue: _i10.Future<_i3.TrackPointEntity?>.value(),
      ) as _i10.Future<_i3.TrackPointEntity?>);

  @override
  _i10.Future<List<_i3.TrackPointEntity>> getTrackPointsInTimeRange({
    required String? activityId,
    required DateTime? startTime,
    required DateTime? endTime,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrackPointsInTimeRange,
          [],
          {
            #activityId: activityId,
            #startTime: startTime,
            #endTime: endTime,
          },
        ),
        returnValue: _i10.Future<List<_i3.TrackPointEntity>>.value(
            <_i3.TrackPointEntity>[]),
      ) as _i10.Future<List<_i3.TrackPointEntity>>);

  @override
  _i10.Future<_i3.TrackPointEntity?> getLatestTrackPoint(String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLatestTrackPoint,
          [activityId],
        ),
        returnValue: _i10.Future<_i3.TrackPointEntity?>.value(),
      ) as _i10.Future<_i3.TrackPointEntity?>);

  @override
  _i10.Future<int> getTrackPointsCount(String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrackPointsCount,
          [activityId],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<List<_i3.TrackPointEntity>> getAccurateTrackPoints({
    required String? activityId,
    required double? maxAccuracyMeters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAccurateTrackPoints,
          [],
          {
            #activityId: activityId,
            #maxAccuracyMeters: maxAccuracyMeters,
          },
        ),
        returnValue: _i10.Future<List<_i3.TrackPointEntity>>.value(
            <_i3.TrackPointEntity>[]),
      ) as _i10.Future<List<_i3.TrackPointEntity>>);

  @override
  _i10.Future<int> createTrackPoint(_i3.TrackPointEntity? trackPoint) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTrackPoint,
          [trackPoint],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<void> createTrackPointsBatch(
          List<_i3.TrackPointEntity>? trackPoints) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTrackPointsBatch,
          [trackPoints],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<bool> updateTrackPoint(_i3.TrackPointEntity? trackPoint) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTrackPoint,
          [trackPoint],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<int> deleteTrackPoint(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTrackPoint,
          [id],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> deleteTrackPointsForActivity(String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTrackPointsForActivity,
          [activityId],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> deleteTrackPointsOlderThan(DateTime? cutoffDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTrackPointsOlderThan,
          [cutoffDate],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Stream<List<_i3.TrackPointEntity>> watchTrackPointsForActivity(
          String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchTrackPointsForActivity,
          [activityId],
        ),
        returnValue: _i10.Stream<List<_i3.TrackPointEntity>>.empty(),
      ) as _i10.Stream<List<_i3.TrackPointEntity>>);

  @override
  _i10.Stream<_i3.TrackPointEntity?> watchLatestTrackPoint(
          String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchLatestTrackPoint,
          [activityId],
        ),
        returnValue: _i10.Stream<_i3.TrackPointEntity?>.empty(),
      ) as _i10.Stream<_i3.TrackPointEntity?>);

  @override
  _i3.TrackPointEntity toEntity(_i13.TrackPoint? trackPoint) =>
      (super.noSuchMethod(
        Invocation.method(
          #toEntity,
          [trackPoint],
        ),
        returnValue: _FakeTrackPointEntity_34(
          this,
          Invocation.method(
            #toEntity,
            [trackPoint],
          ),
        ),
      ) as _i3.TrackPointEntity);

  @override
  _i13.TrackPoint fromEntity(_i3.TrackPointEntity? entity) =>
      (super.noSuchMethod(
        Invocation.method(
          #fromEntity,
          [entity],
        ),
        returnValue: _FakeTrackPoint_35(
          this,
          Invocation.method(
            #fromEntity,
            [entity],
          ),
        ),
      ) as _i13.TrackPoint);

  @override
  _i10.Stream<T> createStream<T extends Object>(
          _i9.QueryStreamFetcher<T>? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i10.Stream<T>.empty(),
      ) as _i10.Stream<T>);

  @override
  T alias<T, D>(
    _i2.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i15.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Stream<Set<_i2.TableUpdate>> tableUpdates(
          [_i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i10.Stream<Set<_i2.TableUpdate>>.empty(),
      ) as _i10.Stream<Set<_i2.TableUpdate>>);

  @override
  _i10.Future<T> doWhenOpened<T>(
          _i10.FutureOr<T> Function(_i2.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_21<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
          _i2.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_22<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_23<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_24<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
          Iterable<_i2.Expression<Object>>? columns) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectExpressions,
          [columns],
        ),
        returnValue: _FakeBaseSelectStatement_25<_i2.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
      ) as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_26<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i2.DeleteStatement<T, D>);

  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
      ) as _i10.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_27<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_27<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i10.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i10.Future<T> exclusively<T>(_i10.Future<T> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #exclusively,
          [action],
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i10.Future<void> batch(
          _i10.FutureOr<void> Function(_i2.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<T> runWithInterceptor<T>(
    _i10.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runWithInterceptor,
          [action],
          {#interceptor: interceptor},
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_28(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_28(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i15.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [SplitDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockSplitDao extends _i1.Mock implements _i7.SplitDao {
  MockSplitDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TrailRunDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeTrailRunDatabase_29(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i3.TrailRunDatabase);

  @override
  _i2.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_15(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i15.dummyValue<_i2.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i2.SqlTypes);

  @override
  _i2.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_13(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.DriftDatabaseOptions);

  @override
  _i2.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_16(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i2.QueryExecutor);

  @override
  _i9.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_17(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i9.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_18(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i2.DatabaseConnectionUser);

  @override
  _i3.$SplitsTableTable get splitsTable => (super.noSuchMethod(
        Invocation.getter(#splitsTable),
        returnValue: _Fake$SplitsTableTable_4(
          this,
          Invocation.getter(#splitsTable),
        ),
      ) as _i3.$SplitsTableTable);

  @override
  _i10.Future<List<_i3.SplitEntity>> getSplitsForActivity(String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSplitsForActivity,
          [activityId],
        ),
        returnValue:
            _i10.Future<List<_i3.SplitEntity>>.value(<_i3.SplitEntity>[]),
      ) as _i10.Future<List<_i3.SplitEntity>>);

  @override
  _i10.Future<_i3.SplitEntity?> getSplitById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getSplitById,
          [id],
        ),
        returnValue: _i10.Future<_i3.SplitEntity?>.value(),
      ) as _i10.Future<_i3.SplitEntity?>);

  @override
  _i10.Future<_i3.SplitEntity?> getSplitByNumber({
    required String? activityId,
    required int? splitNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSplitByNumber,
          [],
          {
            #activityId: activityId,
            #splitNumber: splitNumber,
          },
        ),
        returnValue: _i10.Future<_i3.SplitEntity?>.value(),
      ) as _i10.Future<_i3.SplitEntity?>);

  @override
  _i10.Future<int> getSplitsCount(String? activityId) => (super.noSuchMethod(
        Invocation.method(
          #getSplitsCount,
          [activityId],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<_i3.SplitEntity?> getFastestSplit(String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFastestSplit,
          [activityId],
        ),
        returnValue: _i10.Future<_i3.SplitEntity?>.value(),
      ) as _i10.Future<_i3.SplitEntity?>);

  @override
  _i10.Future<_i3.SplitEntity?> getSlowestSplit(String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSlowestSplit,
          [activityId],
        ),
        returnValue: _i10.Future<_i3.SplitEntity?>.value(),
      ) as _i10.Future<_i3.SplitEntity?>);

  @override
  _i10.Future<List<_i3.SplitEntity>> getSplitsWithElevationChange({
    required String? activityId,
    double? minElevationChangeMeters = 10.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSplitsWithElevationChange,
          [],
          {
            #activityId: activityId,
            #minElevationChangeMeters: minElevationChangeMeters,
          },
        ),
        returnValue:
            _i10.Future<List<_i3.SplitEntity>>.value(<_i3.SplitEntity>[]),
      ) as _i10.Future<List<_i3.SplitEntity>>);

  @override
  _i10.Future<List<_i3.SplitEntity>> getSplitsInPaceRange({
    required String? activityId,
    required double? minPaceSecondsPerKm,
    required double? maxPaceSecondsPerKm,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSplitsInPaceRange,
          [],
          {
            #activityId: activityId,
            #minPaceSecondsPerKm: minPaceSecondsPerKm,
            #maxPaceSecondsPerKm: maxPaceSecondsPerKm,
          },
        ),
        returnValue:
            _i10.Future<List<_i3.SplitEntity>>.value(<_i3.SplitEntity>[]),
      ) as _i10.Future<List<_i3.SplitEntity>>);

  @override
  _i10.Future<int> createSplit(_i3.SplitEntity? split) => (super.noSuchMethod(
        Invocation.method(
          #createSplit,
          [split],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<void> createSplitsBatch(List<_i3.SplitEntity>? splits) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSplitsBatch,
          [splits],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<bool> updateSplit(_i3.SplitEntity? split) => (super.noSuchMethod(
        Invocation.method(
          #updateSplit,
          [split],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<int> deleteSplit(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteSplit,
          [id],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> deleteSplitsForActivity(String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSplitsForActivity,
          [activityId],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> deleteSplitsOlderThan(DateTime? cutoffDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSplitsOlderThan,
          [cutoffDate],
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Stream<List<_i3.SplitEntity>> watchSplitsForActivity(
          String? activityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchSplitsForActivity,
          [activityId],
        ),
        returnValue: _i10.Stream<List<_i3.SplitEntity>>.empty(),
      ) as _i10.Stream<List<_i3.SplitEntity>>);

  @override
  _i10.Stream<_i3.SplitEntity?> watchSplitById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchSplitById,
          [id],
        ),
        returnValue: _i10.Stream<_i3.SplitEntity?>.empty(),
      ) as _i10.Stream<_i3.SplitEntity?>);

  @override
  _i3.SplitEntity toEntity(_i14.Split? split) => (super.noSuchMethod(
        Invocation.method(
          #toEntity,
          [split],
        ),
        returnValue: _FakeSplitEntity_36(
          this,
          Invocation.method(
            #toEntity,
            [split],
          ),
        ),
      ) as _i3.SplitEntity);

  @override
  _i14.Split fromEntity(_i3.SplitEntity? entity) => (super.noSuchMethod(
        Invocation.method(
          #fromEntity,
          [entity],
        ),
        returnValue: _FakeSplit_37(
          this,
          Invocation.method(
            #fromEntity,
            [entity],
          ),
        ),
      ) as _i14.Split);

  @override
  _i10.Stream<T> createStream<T extends Object>(
          _i9.QueryStreamFetcher<T>? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i10.Stream<T>.empty(),
      ) as _i10.Stream<T>);

  @override
  T alias<T, D>(
    _i2.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i15.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Stream<Set<_i2.TableUpdate>> tableUpdates(
          [_i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i10.Stream<Set<_i2.TableUpdate>>.empty(),
      ) as _i10.Stream<Set<_i2.TableUpdate>>);

  @override
  _i10.Future<T> doWhenOpened<T>(
          _i10.FutureOr<T> Function(_i2.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_21<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
          _i2.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_22<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_23<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_24<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
          Iterable<_i2.Expression<Object>>? columns) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectExpressions,
          [columns],
        ),
        returnValue: _FakeBaseSelectStatement_25<_i2.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
      ) as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
          _i2.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_26<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i2.DeleteStatement<T, D>);

  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
      ) as _i10.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_27<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_27<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i10.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i10.Future<T> exclusively<T>(_i10.Future<T> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #exclusively,
          [action],
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i10.Future<void> batch(
          _i10.FutureOr<void> Function(_i2.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<T> runWithInterceptor<T>(
    _i10.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runWithInterceptor,
          [action],
          {#interceptor: interceptor},
        ),
        returnValue: _i15.ifNotNull(
              _i15.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i10.Future<T>.value(v),
            ) ??
            _FakeFuture_20<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
      ) as _i10.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_28(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_28(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i15.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [SyncService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSyncService extends _i1.Mock implements _i17.SyncService {
  MockSyncService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Stream<_i17.SyncStatus> get syncStatusStream => (super.noSuchMethod(
        Invocation.getter(#syncStatusStream),
        returnValue: _i10.Stream<_i17.SyncStatus>.empty(),
      ) as _i10.Stream<_i17.SyncStatus>);

  @override
  _i10.Stream<_i17.SyncConflict> get conflictStream => (super.noSuchMethod(
        Invocation.getter(#conflictStream),
        returnValue: _i10.Stream<_i17.SyncConflict>.empty(),
      ) as _i10.Stream<_i17.SyncConflict>);

  @override
  _i17.SyncStatus get currentStatus => (super.noSuchMethod(
        Invocation.getter(#currentStatus),
        returnValue: _i17.SyncStatus.idle,
      ) as _i17.SyncStatus);

  @override
  _i10.Future<void> initialize({
    required _i3.TrailRunDatabase? database,
    String? baseUrl,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
          {
            #database: database,
            #baseUrl: baseUrl,
            #headers: headers,
          },
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> syncAll() => (super.noSuchMethod(
        Invocation.method(
          #syncAll,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> syncActivity(String? activityId) => (super.noSuchMethod(
        Invocation.method(
          #syncActivity,
          [activityId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> resolveConflict(
    _i17.SyncConflict? conflict, {
    bool? preserveLocal = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resolveConflict,
          [conflict],
          {#preserveLocal: preserveLocal},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> queueEntitySync({
    required String? entityType,
    required String? entityId,
    required String? operation,
    required Map<String, dynamic>? data,
    int? priority = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queueEntitySync,
          [],
          {
            #entityType: entityType,
            #entityId: entityId,
            #operation: operation,
            #data: data,
            #priority: priority,
          },
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
